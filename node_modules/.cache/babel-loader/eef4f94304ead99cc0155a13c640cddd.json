{"ast":null,"code":"module.exports = {\n  dateTime: fTimestamp,\n  // mysql timestamp\n  fDateTIme: fDate,\n  //with month name in words\n  currentTimestamp: timeStamp,\n  //with just numbers only\n  date: getDate,\n  // date only no time. (mysql date)\n  time: getTime,\n  rawDate: dateObj\n};\n\nfunction getDate(date = new Date()) {\n  const rawDate = dateObj(date);\n  const dateStr = rawDate.year + \"-\" + rawDate.month + \"-\" + rawDate.day;\n  return dateStr;\n}\n\nfunction getTime(time = new Date()) {\n  const rawDate = dateObj(time);\n  const timeStr = rawDate.hours + \":\" + rawDate.mins + \":\" + rawDate.secs;\n  return timeStr;\n}\n\nfunction timeStamp() {\n  return rawTimeStamp(new Date(), \"str\");\n}\n\nfunction fTimestamp(dateTime = new Date()) {\n  return rawTimeStamp(dateTime);\n}\n\nfunction fDate(date = new Date()) {\n  var monthArr = [\"index0\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"June\", \"July\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  const dateObject = dateObj(date);\n  dateObject.month = monthArr[dateObject.month];\n  var newDate = dateObject.day + \" \" + dateObject.month + \" \" + dateObject.year + \" \" + dateObject.hours + \":\" + dateObject.mins + \":\" + dateObject.secs;\n  return newDate;\n}\n\nfunction rawTimeStamp(dateTime = new Date(), type = \"\") {\n  const dateObject = dateObj(dateTime);\n  if (!type) return dateObject.year + \"-\" + dateObject.month + \"-\" + dateObject.day + \" \" + dateObject.hours + \":\" + dateObject.mins + \":\" + dateObject.secs;else return dateObject.year + \"\" + dateObject.month + \"\" + dateObject.day + \"\" + dateObject.hours + \"\" + dateObject.mins + \"\" + dateObject.secs + \"\" + dateObject.miliSecs;\n}\n\nfunction dateObj(dateTime = new Date()) {\n  const defaultDateTime = new Date(dateTime);\n  const year = defaultDateTime.getFullYear();\n  let month = defaultDateTime.getMonth() + 1;\n  month = month / 10 < 1 ? \"0\" + month : month;\n  const weekDay = defaultDateTime.getDay();\n  let day = defaultDateTime.getDate();\n  day = day / 10 < 1 ? \"0\" + day : day;\n  let hrs = defaultDateTime.getHours();\n  hrs = hrs / 10 < 1 ? \"0\" + hrs : hrs;\n  let mins = defaultDateTime.getMinutes();\n  mins = mins / 10 < 1 ? \"0\" + mins : mins;\n  let secs = defaultDateTime.getSeconds();\n  secs = secs / 10 < 1 ? \"0\" + secs : secs;\n  let miliSecs = defaultDateTime.getMilliseconds();\n  miliSecs = miliSecs / 10 < 1 ? \"00\" + miliSecs : miliSecs / 100 < 1 ? \"0\" + miliSecs : miliSecs;\n  return {\n    year: year,\n    month: month,\n    day: day,\n    weekDay: weekDay,\n    hours: hrs,\n    mins: mins,\n    secs: secs,\n    miliSecs: miliSecs\n  };\n}","map":{"version":3,"sources":["/Users/asifahmad/Documents/GitHub/igl-admin/src/common/date.js"],"names":["module","exports","dateTime","fTimestamp","fDateTIme","fDate","currentTimestamp","timeStamp","date","getDate","time","getTime","rawDate","dateObj","Date","dateStr","year","month","day","timeStr","hours","mins","secs","rawTimeStamp","monthArr","dateObject","newDate","type","miliSecs","defaultDateTime","getFullYear","getMonth","weekDay","getDay","hrs","getHours","getMinutes","getSeconds","getMilliseconds"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB;AAChBC,EAAAA,QAAQ,EAAEC,UADM;AACM;AACtBC,EAAAA,SAAS,EAAEC,KAFK;AAEE;AAClBC,EAAAA,gBAAgB,EAAEC,SAHF;AAGa;AAC7BC,EAAAA,IAAI,EAAEC,OAJU;AAID;AACfC,EAAAA,IAAI,EAAEC,OALU;AAMhBC,EAAAA,OAAO,EAAEC;AANO,CAAjB;;AASA,SAASJ,OAAT,CAAiBD,IAAI,GAAG,IAAIM,IAAJ,EAAxB,EAAoC;AACnC,QAAMF,OAAO,GAAGC,OAAO,CAACL,IAAD,CAAvB;AACA,QAAMO,OAAO,GAAGH,OAAO,CAACI,IAAR,GAAe,GAAf,GAAqBJ,OAAO,CAACK,KAA7B,GAAqC,GAArC,GAA2CL,OAAO,CAACM,GAAnE;AACA,SAAOH,OAAP;AACA;;AAED,SAASJ,OAAT,CAAiBD,IAAI,GAAG,IAAII,IAAJ,EAAxB,EAAoC;AACnC,QAAMF,OAAO,GAAGC,OAAO,CAACH,IAAD,CAAvB;AACA,QAAMS,OAAO,GAAGP,OAAO,CAACQ,KAAR,GAAgB,GAAhB,GAAsBR,OAAO,CAACS,IAA9B,GAAqC,GAArC,GAA2CT,OAAO,CAACU,IAAnE;AACA,SAAOH,OAAP;AACA;;AAED,SAASZ,SAAT,GAAqB;AACpB,SAAOgB,YAAY,CAAC,IAAIT,IAAJ,EAAD,EAAa,KAAb,CAAnB;AACA;;AAED,SAASX,UAAT,CAAoBD,QAAQ,GAAG,IAAIY,IAAJ,EAA/B,EAA2C;AAC1C,SAAOS,YAAY,CAACrB,QAAD,CAAnB;AACA;;AAED,SAASG,KAAT,CAAeG,IAAI,GAAG,IAAIM,IAAJ,EAAtB,EAAkC;AACjC,MAAIU,QAAQ,GAAG,CAAC,QAAD,EAAW,KAAX,EAAkB,KAAlB,EAAyB,KAAzB,EAAgC,KAAhC,EAAuC,KAAvC,EAA8C,MAA9C,EAAsD,MAAtD,EAA8D,KAA9D,EAAqE,KAArE,EAA4E,KAA5E,EAAmF,KAAnF,EAA0F,KAA1F,CAAf;AACA,QAAMC,UAAU,GAAGZ,OAAO,CAACL,IAAD,CAA1B;AACAiB,EAAAA,UAAU,CAACR,KAAX,GAAmBO,QAAQ,CAACC,UAAU,CAACR,KAAZ,CAA3B;AACA,MAAIS,OAAO,GAAGD,UAAU,CAACP,GAAX,GAAiB,GAAjB,GAAuBO,UAAU,CAACR,KAAlC,GAA0C,GAA1C,GAAgDQ,UAAU,CAACT,IAA3D,GAAkE,GAAlE,GAAwES,UAAU,CAACL,KAAnF,GAA2F,GAA3F,GAAiGK,UAAU,CAACJ,IAA5G,GAAmH,GAAnH,GAAyHI,UAAU,CAACH,IAAlJ;AACA,SAAOI,OAAP;AACA;;AAED,SAASH,YAAT,CAAsBrB,QAAQ,GAAG,IAAIY,IAAJ,EAAjC,EAA6Ca,IAAI,GAAG,EAApD,EAAwD;AACvD,QAAMF,UAAU,GAAGZ,OAAO,CAACX,QAAD,CAA1B;AACA,MAAI,CAACyB,IAAL,EAAW,OAAOF,UAAU,CAACT,IAAX,GAAkB,GAAlB,GAAwBS,UAAU,CAACR,KAAnC,GAA2C,GAA3C,GAAiDQ,UAAU,CAACP,GAA5D,GAAkE,GAAlE,GAAwEO,UAAU,CAACL,KAAnF,GAA2F,GAA3F,GAAiGK,UAAU,CAACJ,IAA5G,GAAmH,GAAnH,GAAyHI,UAAU,CAACH,IAA3I,CAAX,KACK,OAAOG,UAAU,CAACT,IAAX,GAAkB,EAAlB,GAAuBS,UAAU,CAACR,KAAlC,GAA0C,EAA1C,GAA+CQ,UAAU,CAACP,GAA1D,GAAgE,EAAhE,GAAqEO,UAAU,CAACL,KAAhF,GAAwF,EAAxF,GAA6FK,UAAU,CAACJ,IAAxG,GAA+G,EAA/G,GAAoHI,UAAU,CAACH,IAA/H,GAAsI,EAAtI,GAA2IG,UAAU,CAACG,QAA7J;AACL;;AAED,SAASf,OAAT,CAAiBX,QAAQ,GAAG,IAAIY,IAAJ,EAA5B,EAAwC;AACvC,QAAMe,eAAe,GAAG,IAAIf,IAAJ,CAASZ,QAAT,CAAxB;AACA,QAAMc,IAAI,GAAGa,eAAe,CAACC,WAAhB,EAAb;AACA,MAAIb,KAAK,GAAGY,eAAe,CAACE,QAAhB,KAA6B,CAAzC;AACAd,EAAAA,KAAK,GAAGA,KAAK,GAAG,EAAR,GAAa,CAAb,GAAiB,MAAMA,KAAvB,GAA+BA,KAAvC;AACA,QAAMe,OAAO,GAAGH,eAAe,CAACI,MAAhB,EAAhB;AACA,MAAIf,GAAG,GAAGW,eAAe,CAACpB,OAAhB,EAAV;AACAS,EAAAA,GAAG,GAAGA,GAAG,GAAG,EAAN,GAAW,CAAX,GAAe,MAAMA,GAArB,GAA2BA,GAAjC;AACA,MAAIgB,GAAG,GAAGL,eAAe,CAACM,QAAhB,EAAV;AACAD,EAAAA,GAAG,GAAGA,GAAG,GAAG,EAAN,GAAW,CAAX,GAAe,MAAMA,GAArB,GAA2BA,GAAjC;AACA,MAAIb,IAAI,GAAGQ,eAAe,CAACO,UAAhB,EAAX;AACAf,EAAAA,IAAI,GAAGA,IAAI,GAAG,EAAP,GAAY,CAAZ,GAAgB,MAAMA,IAAtB,GAA6BA,IAApC;AACA,MAAIC,IAAI,GAAGO,eAAe,CAACQ,UAAhB,EAAX;AACAf,EAAAA,IAAI,GAAGA,IAAI,GAAG,EAAP,GAAY,CAAZ,GAAgB,MAAMA,IAAtB,GAA6BA,IAApC;AACA,MAAIM,QAAQ,GAAGC,eAAe,CAACS,eAAhB,EAAf;AACAV,EAAAA,QAAQ,GAAGA,QAAQ,GAAG,EAAX,GAAgB,CAAhB,GAAoB,OAAOA,QAA3B,GAAsCA,QAAQ,GAAG,GAAX,GAAiB,CAAjB,GAAqB,MAAMA,QAA3B,GAAsCA,QAAvF;AACA,SAAO;AACNZ,IAAAA,IAAI,EAAEA,IADA;AAENC,IAAAA,KAAK,EAAEA,KAFD;AAGNC,IAAAA,GAAG,EAAEA,GAHC;AAINc,IAAAA,OAAO,EAAEA,OAJH;AAKNZ,IAAAA,KAAK,EAAEc,GALD;AAMNb,IAAAA,IAAI,EAAEA,IANA;AAONC,IAAAA,IAAI,EAAEA,IAPA;AAQNM,IAAAA,QAAQ,EAAEA;AARJ,GAAP;AAUA","sourcesContent":["module.exports = {\n\tdateTime: fTimestamp, // mysql timestamp\n\tfDateTIme: fDate, //with month name in words\n\tcurrentTimestamp: timeStamp, //with just numbers only\n\tdate: getDate, // date only no time. (mysql date)\n\ttime: getTime,\n\trawDate: dateObj,\n};\n\nfunction getDate(date = new Date()) {\n\tconst rawDate = dateObj(date);\n\tconst dateStr = rawDate.year + \"-\" + rawDate.month + \"-\" + rawDate.day;\n\treturn dateStr;\n}\n\nfunction getTime(time = new Date()) {\n\tconst rawDate = dateObj(time);\n\tconst timeStr = rawDate.hours + \":\" + rawDate.mins + \":\" + rawDate.secs;\n\treturn timeStr;\n}\n\nfunction timeStamp() {\n\treturn rawTimeStamp(new Date(), \"str\");\n}\n\nfunction fTimestamp(dateTime = new Date()) {\n\treturn rawTimeStamp(dateTime);\n}\n\nfunction fDate(date = new Date()) {\n\tvar monthArr = [\"index0\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"June\", \"July\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\tconst dateObject = dateObj(date);\n\tdateObject.month = monthArr[dateObject.month];\n\tvar newDate = dateObject.day + \" \" + dateObject.month + \" \" + dateObject.year + \" \" + dateObject.hours + \":\" + dateObject.mins + \":\" + dateObject.secs;\n\treturn newDate;\n}\n\nfunction rawTimeStamp(dateTime = new Date(), type = \"\") {\n\tconst dateObject = dateObj(dateTime);\n\tif (!type) return dateObject.year + \"-\" + dateObject.month + \"-\" + dateObject.day + \" \" + dateObject.hours + \":\" + dateObject.mins + \":\" + dateObject.secs;\n\telse return dateObject.year + \"\" + dateObject.month + \"\" + dateObject.day + \"\" + dateObject.hours + \"\" + dateObject.mins + \"\" + dateObject.secs + \"\" + dateObject.miliSecs;\n}\n\nfunction dateObj(dateTime = new Date()) {\n\tconst defaultDateTime = new Date(dateTime);\n\tconst year = defaultDateTime.getFullYear();\n\tlet month = defaultDateTime.getMonth() + 1;\n\tmonth = month / 10 < 1 ? \"0\" + month : month;\n\tconst weekDay = defaultDateTime.getDay();\n\tlet day = defaultDateTime.getDate();\n\tday = day / 10 < 1 ? \"0\" + day : day;\n\tlet hrs = defaultDateTime.getHours();\n\thrs = hrs / 10 < 1 ? \"0\" + hrs : hrs;\n\tlet mins = defaultDateTime.getMinutes();\n\tmins = mins / 10 < 1 ? \"0\" + mins : mins;\n\tlet secs = defaultDateTime.getSeconds();\n\tsecs = secs / 10 < 1 ? \"0\" + secs : secs;\n\tlet miliSecs = defaultDateTime.getMilliseconds();\n\tmiliSecs = miliSecs / 10 < 1 ? \"00\" + miliSecs : miliSecs / 100 < 1 ? \"0\" + miliSecs : miliSecs;\n\treturn {\n\t\tyear: year,\n\t\tmonth: month,\n\t\tday: day,\n\t\tweekDay: weekDay,\n\t\thours: hrs,\n\t\tmins: mins,\n\t\tsecs: secs,\n\t\tmiliSecs: miliSecs,\n\t};\n}\n"]},"metadata":{},"sourceType":"module"}