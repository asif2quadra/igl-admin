{"ast":null,"code":"var _jsxFileName = \"/Users/asifahmad/Documents/GitHub/igl-admin/src/components/pages/MyStation.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useContext } from \"react\"; // animation\n\nimport { motion } from \"framer-motion\";\nimport Animation from \"../../common/Animation\";\nimport { callAPI } from \"../../common/common\"; // Context\n\nimport { AppContext } from \"../../Context/Context\"; // icons\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyStation() {\n  _s();\n\n  const {\n    user,\n    contextDispatch\n  } = useContext(AppContext);\n  useEffect(() => {\n    contextDispatch({\n      type: \"SET_PAGE_TITLE\",\n      payload: \"My Station\"\n    });\n    contextDispatch({\n      type: \"SET_ACTIVE_PAGE_HEAD\",\n      payload: \"My Station\"\n    });\n    return () => {\n      contextDispatch({\n        type: \"SET_ACTIVE_PAGE_SPINNER\",\n        payload: true\n      });\n    };\n  }, [contextDispatch]); // const [dispensor, setDispensor] = useState(\"\");\n  // const [side, setSide] = useState(\"\");\n  // const [qrString, setQRString] = useState(\"\");\n  // const [isHiddenQR, setIsHiddenQR] = useState(true);\n  // const genQR = () => {\n  // \tsetIsHiddenQR(true);\n  // \tsetQRString(\n  // \t\tJSON.stringify({\n  // \t\t\tdispensor,\n  // \t\t\tside,\n  // \t\t})\n  // \t);\n  // \tsetIsHiddenQR(false);\n  // };\n  // submit\n\n  async function submitForm(e) {\n    e.preventDefault();\n    setSubmitNoteTxt(\"\");\n    window.$(\"#stationModal #modalSpinner\").show();\n    const response = await callAPI({\n      URL: \"stations/\" + stationId,\n      method: stationId === \"NEW\" ? \"POST\" : \"PUT\",\n      body: {\n        stationName,\n        stationCode,\n        DSO,\n        address,\n        pincode,\n        TINNumber,\n        CNGRate\n      }\n    });\n    window.$(\"#stationModal #modalSpinner\").hide();\n\n    if (response.status === 200) {\n      setSubmitNoteClass(\"text-success\");\n      setSubmitNoteTxt(stationId === \"NEW\" ? \"Added\" : \"Updated\");\n      setTimeout(() => {\n        window.$(\"#stationModal #closeBtn\").click();\n        setRetrigger(Math.random());\n      }, 1000);\n    } else {\n      setSubmitNoteClass(\"text-danger\");\n      setSubmitNoteTxt(response.message);\n    }\n  }\n\n  const [retrigger, setRetrigger] = useState(\"\"); // get\n\n  const [submitNoteClass, setSubmitNoteClass] = useState(\"\");\n  const [submitNoteTxt, setSubmitNoteTxt] = useState(\"\");\n  const [stationId, setStationId] = useState(user.Station);\n  const [stationName, setStationName] = useState(\"\");\n  const [stationCode, setStationCode] = useState(\"\");\n  const [DSO, setDSO] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [pincode, setPincode] = useState(\"\");\n  const [TINNumber, setTINNumber] = useState(\"\");\n  const [CNGRate, setCNGRate] = useState(\"\");\n  const [timeOutState, setTimeOutState] = useState(\"\");\n  useEffect(e => {\n    if (timeOutState) {\n      clearTimeout(timeOutState);\n    }\n\n    setTimeOutState(setTimeout(e => {\n      setSubmitNoteTxt(\"\");\n    }, 3000));\n  }, [submitNoteTxt, timeOutState]);\n  useEffect(() => {\n    setStationId(user.Station);\n\n    async function getStation() {\n      const response = await callAPI({\n        URL: \"stations/\" + user.Station\n      });\n      if (response.status !== 200) return;\n      const data = response.data;\n      setStationName(data.stationName);\n      setDSO(data.DSO);\n      setAddress(data.address);\n      setPincode(data.pincode);\n      setTINNumber(data.TINNumber);\n      setCNGRate(data.CNGRate);\n      setStationCode(data.stationCode);\n    }\n\n    getStation();\n  }, [user, retrigger]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: Animation.variants.out,\n        animate: Animation.variants.in,\n        exit: Animation.variants.exit,\n        transition: Animation.PageTransition,\n        className: \"page-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card dataCard\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-title \",\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"my-4\",\n                style: {\n                  fontWeight: \"bold\"\n                },\n                children: stationName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-12\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-6\",\n                    children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n                      className: \"formBox\",\n                      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n                        children: \"Station Name \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 144,\n                        columnNumber: 13\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        required: true,\n                        placeholder: \"Station Name\",\n                        value: stationName,\n                        onChange: e => setStationName(e.target.value),\n                        className: \"formField\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 145,\n                        columnNumber: 13\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 143,\n                      columnNumber: 12\n                    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n                      className: \"formBox\",\n                      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n                        children: \"DSO Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 149,\n                        columnNumber: 13\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        value: DSO,\n                        placeholder: \"DSO name\",\n                        onChange: e => setDSO(e.target.value),\n                        className: \"formField\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 150,\n                        columnNumber: 13\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 148,\n                      columnNumber: 12\n                    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n                      className: \"formBox\",\n                      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n                        children: \"Station Code\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 153,\n                        columnNumber: 13\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        placeholder: \"Station Code for Bill\",\n                        value: stationCode,\n                        onChange: e => setStationCode(e.target.value),\n                        className: \"formField\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 154,\n                        columnNumber: 13\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 152,\n                      columnNumber: 12\n                    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n                      className: \"formBox\",\n                      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n                        children: \"CNG Rate\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 157,\n                        columnNumber: 13\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"number\",\n                        required: true,\n                        placeholder: \"CNG Rate of Station\",\n                        value: CNGRate,\n                        onChange: e => setCNGRate(e.target.value),\n                        className: \"formField\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 158,\n                        columnNumber: 13\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 156,\n                      columnNumber: 12\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-6\",\n                    children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n                      className: \"formBox\",\n                      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n                        children: \"TIN Number\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 163,\n                        columnNumber: 13\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        placeholder: \"TIN Number of Station\",\n                        value: TINNumber,\n                        onChange: e => setTINNumber(e.target.value),\n                        className: \"formField\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 164,\n                        columnNumber: 13\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 162,\n                      columnNumber: 12\n                    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n                      className: \"formBox\",\n                      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n                        children: \"Pincode \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 167,\n                        columnNumber: 13\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"number\",\n                        placeholder: \"Pincode of Station\",\n                        value: pincode,\n                        onChange: e => setPincode(e.target.value),\n                        className: \"formField\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 168,\n                        columnNumber: 13\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 166,\n                      columnNumber: 12\n                    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n                      className: \"formBox\",\n                      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n                        children: \"Address\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 171,\n                        columnNumber: 13\n                      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                        className: \"formField\",\n                        style: {\n                          height: \"125px\"\n                        },\n                        onChange: e => setAddress(e.target.value),\n                        value: address,\n                        placeholder: \"Address of Station\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 172,\n                        columnNumber: 13\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 170,\n                      columnNumber: 12\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-12\",\n                    style: {\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      justifyContent: \"flex-end\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"submitNote\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        id: \"submitNote\",\n                        className: submitNoteClass,\n                        children: submitNoteTxt\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 177,\n                        columnNumber: 13\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 176,\n                      columnNumber: 12\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      id: \"modalSpinner\",\n                      style: {\n                        transform: \"scale(0.7)\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"spinner-border text-success\",\n                        role: \"status\",\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"sr-only\",\n                          children: \"Loading...\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 183,\n                          columnNumber: 14\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 182,\n                        columnNumber: 13\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 181,\n                      columnNumber: 12\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"submit\",\n                      className: \"btn btn-primary\",\n                      onClick: submitForm,\n                      children: \"Submit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 186,\n                      columnNumber: 12\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 3\n  }, this);\n}\n\n_s(MyStation, \"DSyQuDQ7Db6RlxmDkstadPp2tnU=\");\n\n_c = MyStation;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyStation\");","map":{"version":3,"sources":["/Users/asifahmad/Documents/GitHub/igl-admin/src/components/pages/MyStation.jsx"],"names":["useEffect","useState","useContext","motion","Animation","callAPI","AppContext","MyStation","user","contextDispatch","type","payload","submitForm","e","preventDefault","setSubmitNoteTxt","window","$","show","response","URL","stationId","method","body","stationName","stationCode","DSO","address","pincode","TINNumber","CNGRate","hide","status","setSubmitNoteClass","setTimeout","click","setRetrigger","Math","random","message","retrigger","submitNoteClass","submitNoteTxt","setStationId","Station","setStationName","setStationCode","setDSO","setAddress","setPincode","setTINNumber","setCNGRate","timeOutState","setTimeOutState","clearTimeout","getStation","data","variants","out","in","exit","PageTransition","fontWeight","target","value","height","display","alignItems","justifyContent","transform"],"mappings":"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","sourcesContent":["import { useEffect, useState, useContext } from \"react\";\n// animation\nimport { motion } from \"framer-motion\";\nimport Animation from \"../../common/Animation\";\nimport { callAPI } from \"../../common/common\";\n\n// Context\nimport { AppContext } from \"../../Context/Context\";\n\n// icons\n\nexport default function MyStation() {\n\tconst { user, contextDispatch } = useContext(AppContext);\n\n\tuseEffect(() => {\n\t\tcontextDispatch({\n\t\t\ttype: \"SET_PAGE_TITLE\",\n\t\t\tpayload: \"My Station\",\n\t\t});\n\t\tcontextDispatch({\n\t\t\ttype: \"SET_ACTIVE_PAGE_HEAD\",\n\t\t\tpayload: \"My Station\",\n\t\t});\n\n\t\treturn () => {\n\t\t\tcontextDispatch({\n\t\t\t\ttype: \"SET_ACTIVE_PAGE_SPINNER\",\n\t\t\t\tpayload: true,\n\t\t\t});\n\t\t};\n\t}, [contextDispatch]);\n\t// const [dispensor, setDispensor] = useState(\"\");\n\t// const [side, setSide] = useState(\"\");\n\t// const [qrString, setQRString] = useState(\"\");\n\t// const [isHiddenQR, setIsHiddenQR] = useState(true);\n\n\t// const genQR = () => {\n\t// \tsetIsHiddenQR(true);\n\t// \tsetQRString(\n\t// \t\tJSON.stringify({\n\t// \t\t\tdispensor,\n\t// \t\t\tside,\n\t// \t\t})\n\t// \t);\n\t// \tsetIsHiddenQR(false);\n\t// };\n\n\t// submit\n\tasync function submitForm(e) {\n\t\te.preventDefault();\n\t\tsetSubmitNoteTxt(\"\");\n\t\twindow.$(\"#stationModal #modalSpinner\").show();\n\t\tconst response = await callAPI({\n\t\t\tURL: \"stations/\" + stationId,\n\t\t\tmethod: stationId === \"NEW\" ? \"POST\" : \"PUT\",\n\t\t\tbody: {\n\t\t\t\tstationName,\n\t\t\t\tstationCode,\n\t\t\t\tDSO,\n\t\t\t\taddress,\n\t\t\t\tpincode,\n\t\t\t\tTINNumber,\n\t\t\t\tCNGRate,\n\t\t\t},\n\t\t});\n\t\twindow.$(\"#stationModal #modalSpinner\").hide();\n\t\tif (response.status === 200) {\n\t\t\tsetSubmitNoteClass(\"text-success\");\n\t\t\tsetSubmitNoteTxt(stationId === \"NEW\" ? \"Added\" : \"Updated\");\n\t\t\tsetTimeout(() => {\n\t\t\t\twindow.$(\"#stationModal #closeBtn\").click();\n\t\t\t\tsetRetrigger(Math.random());\n\t\t\t}, 1000);\n\t\t} else {\n\t\t\tsetSubmitNoteClass(\"text-danger\");\n\t\t\tsetSubmitNoteTxt(response.message);\n\t\t}\n\t}\n\tconst [retrigger, setRetrigger] = useState(\"\");\n\t// get\n\tconst [submitNoteClass, setSubmitNoteClass] = useState(\"\");\n\tconst [submitNoteTxt, setSubmitNoteTxt] = useState(\"\");\n\n\tconst [stationId, setStationId] = useState(user.Station);\n\tconst [stationName, setStationName] = useState(\"\");\n\tconst [stationCode, setStationCode] = useState(\"\");\n\tconst [DSO, setDSO] = useState(\"\");\n\tconst [address, setAddress] = useState(\"\");\n\tconst [pincode, setPincode] = useState(\"\");\n\tconst [TINNumber, setTINNumber] = useState(\"\");\n\tconst [CNGRate, setCNGRate] = useState(\"\");\n\n\tconst [timeOutState, setTimeOutState] = useState(\"\");\n\tuseEffect(\n\t\t(e) => {\n\t\t\tif (timeOutState) {\n\t\t\t\tclearTimeout(timeOutState);\n\t\t\t}\n\t\t\tsetTimeOutState(\n\t\t\t\tsetTimeout((e) => {\n\t\t\t\t\tsetSubmitNoteTxt(\"\");\n\t\t\t\t}, 3000)\n\t\t\t);\n\t\t},\n\t\t[submitNoteTxt, timeOutState]\n\t);\n\n\tuseEffect(() => {\n\t\tsetStationId(user.Station);\n\t\tasync function getStation() {\n\t\t\tconst response = await callAPI({\n\t\t\t\tURL: \"stations/\" + user.Station,\n\t\t\t});\n\t\t\tif (response.status !== 200) return;\n\n\t\t\tconst data = response.data;\n\t\t\tsetStationName(data.stationName);\n\t\t\tsetDSO(data.DSO);\n\t\t\tsetAddress(data.address);\n\t\t\tsetPincode(data.pincode);\n\t\t\tsetTINNumber(data.TINNumber);\n\t\t\tsetCNGRate(data.CNGRate);\n\t\t\tsetStationCode(data.stationCode);\n\t\t}\n\t\tgetStation();\n\t}, [user, retrigger]);\n\n\treturn (\n\t\t<div className=\"page-wrapper\">\n\t\t\t<div className=\"page-content-wrapper\">\n\t\t\t\t<motion.div initial={Animation.variants.out} animate={Animation.variants.in} exit={Animation.variants.exit} transition={Animation.PageTransition} className=\"page-content\">\n\t\t\t\t\t<div className=\"card dataCard\">\n\t\t\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t\t\t<div className=\"card-title \">\n\t\t\t\t\t\t\t\t<h4 className=\"my-4\" style={{ fontWeight: \"bold\" }}>\n\t\t\t\t\t\t\t\t\t{stationName}\n\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\n\t\t\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-6\">\n\t\t\t\t\t\t\t\t\t\t\t<fieldset className=\"formBox\">\n\t\t\t\t\t\t\t\t\t\t\t\t<legend>Station Name </legend>\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" required placeholder=\"Station Name\" value={stationName} onChange={(e) => setStationName(e.target.value)} className=\"formField\" />\n\t\t\t\t\t\t\t\t\t\t\t</fieldset>\n\n\t\t\t\t\t\t\t\t\t\t\t<fieldset className=\"formBox\">\n\t\t\t\t\t\t\t\t\t\t\t\t<legend>DSO Name</legend>\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" value={DSO} placeholder=\"DSO name\" onChange={(e) => setDSO(e.target.value)} className=\"formField\" />\n\t\t\t\t\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t\t\t\t\t<fieldset className=\"formBox\">\n\t\t\t\t\t\t\t\t\t\t\t\t<legend>Station Code</legend>\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" placeholder=\"Station Code for Bill\" value={stationCode} onChange={(e) => setStationCode(e.target.value)} className=\"formField\" />\n\t\t\t\t\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t\t\t\t\t<fieldset className=\"formBox\">\n\t\t\t\t\t\t\t\t\t\t\t\t<legend>CNG Rate</legend>\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"number\" required placeholder=\"CNG Rate of Station\" value={CNGRate} onChange={(e) => setCNGRate(e.target.value)} className=\"formField\" />\n\t\t\t\t\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-6\">\n\t\t\t\t\t\t\t\t\t\t\t<fieldset className=\"formBox\">\n\t\t\t\t\t\t\t\t\t\t\t\t<legend>TIN Number</legend>\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" placeholder=\"TIN Number of Station\" value={TINNumber} onChange={(e) => setTINNumber(e.target.value)} className=\"formField\" />\n\t\t\t\t\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t\t\t\t\t<fieldset className=\"formBox\">\n\t\t\t\t\t\t\t\t\t\t\t\t<legend>Pincode </legend>\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"number\" placeholder=\"Pincode of Station\" value={pincode} onChange={(e) => setPincode(e.target.value)} className=\"formField\" />\n\t\t\t\t\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t\t\t\t\t<fieldset className=\"formBox\">\n\t\t\t\t\t\t\t\t\t\t\t\t<legend>Address</legend>\n\t\t\t\t\t\t\t\t\t\t\t\t<textarea className=\"formField\" style={{ height: \"125px\" }} onChange={(e) => setAddress(e.target.value)} value={address} placeholder=\"Address of Station\"></textarea>\n\t\t\t\t\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\" style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"flex-end\" }}>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"submitNote\">\n\t\t\t\t\t\t\t\t\t\t\t\t<span id=\"submitNote\" className={submitNoteClass}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{submitNoteTxt}\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div id=\"modalSpinner\" style={{ transform: \"scale(0.7)\" }}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"spinner-border text-success\" role=\"status\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"sr-only\">Loading...</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\" onClick={submitForm}>\n\t\t\t\t\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</motion.div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}